import random
import requests
from pytrends.request import TrendReq
from PIL import Image, ImageDraw, ImageFont
import io
import textwrap
import os
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = "8461091151:AAEd-mqGswAijmwFB0teeXeZFe-gtHfD-PI"
TELEGRAM_CHANNEL_ID = "-1002201089739"

NISHA = ["–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "—Ä–µ–∫–ª–∞–º–∞", "–Ω–æ–≤–æ—Å—Ç–∏", "—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"]
GEO_LOCATION = 'RS'

FALLBACK_TRENDS = [
    "—Ç—Ä–µ–Ω–¥—ã –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ 2025", "–Ω–æ–≤–æ—Å—Ç–∏ digital", "SMM —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏",
    "–∫–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "—Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞", "—Ç—Ä–µ–Ω–¥—ã —Å–æ—Ü—Å–µ—Ç–µ–π",
    "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ", "email —Ä–∞—Å—Å—ã–ª–∫–∏", "–≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"
]

def get_google_trends():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏–∑ Google Trends"""
    print("üìä –ó–∞–ø—Ä–æ—Å –∫ Google Trends...")
    try:
        pytrends = TrendReq(hl='ru-RU', tz=180)  # UTC+3 –¥–ª—è –ë–µ–ª–≥—Ä–∞–¥–∞
        pytrends.build_payload(NISHA, timeframe='now 1-d', geo=GEO_LOCATION)
        trends_data = pytrends.related_queries()
        
        all_trends = []
        for key in NISHA:
            if key in trends_data and trends_data[key]['top'] is not None:
                all_trends.extend([row['query'] for _, row in trends_data[key]['top'].iterrows()])
        
        return list(set(all_trends)) if all_trends else FALLBACK_TRENDS
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Trends: {e}")
        return FALLBACK_TRENDS

def generate_text(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞"""
    # –õ–æ–∫–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å —é–º–æ—Ä–æ–º
    templates = [
        f"üî• {trend} ‚Äî –≤–æ—Ç —ç—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç! –ß—Ç–æ –¥—É–º–∞–µ—Ç–µ? ü§î\n\n–û–±—Å—É–¥–∏–º –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ö? üëá",
        f"üöÄ {trend} ‚Äî —Ç—Ä–µ–Ω–¥ —Å–µ–∑–æ–Ω–∞! –ê –≤—ã –≤ —Ç–µ–º–µ? üí´\n\n–ñ–¥—É –≤–∞—à–∏ –º–Ω–µ–Ω–∏—è! üí¨",
        f"üìà {trend} ‚Äî –≤—Å–µ —Ç–æ–ª—å–∫–æ –æ–± —ç—Ç–æ–º –∏ –≥–æ–≤–æ—Ä—è—Ç! –ê –≤—ã? üéØ\n\n–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–ø–æ—Ä–∏–º? üòÑ",
        f"üí° {trend} ‚Äî –≥–µ–Ω–∏–∞–ª—å–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ–æ—Ü–µ–Ω–µ–Ω–æ? –í–∞—à–µ –º–Ω–µ–Ω–∏–µ! ü§∑‚Äç‚ôÇÔ∏è\n\n–ü–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏! ‚úçÔ∏è",
        f"üåü {trend} ‚Äî –≤–æ—Ç —ç—Ç–æ –Ω–æ–≤–æ—Å—Ç—å! –ö–∞–∫ –≤–∞–º? üéâ\n\n–ñ–¥—É –≤–∞—à–∏ —Ä–µ–∞–∫—Ü–∏–∏! ‚ù§Ô∏è",
        f"üéØ {trend} ‚Äî —Ö–∞–π–ø –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–æ? –†–µ—à–∞–µ–º –≤–º–µ—Å—Ç–µ! ü§î\n\n–í–∞—à–∏ –º—ã—Å–ª–∏?",
        f"üí• {trend} ‚Äî –≤–∑—Ä—ã–≤–Ω–∞—è —Ç–µ–º–∞! –£–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏? üöÄ\n\n–î–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º!",
        f"üì± {trend} ‚Äî –Ω–æ–≤—ã–π —Ç—Ä–µ–Ω–¥ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö! –£—Å–ø–µ–µ—Ç–µ –∑–∞ —Ö–∞–π–ø–æ–º? üåä\n\n–ö–∞–∫ –≤–∞–º?",
        f"ü§ñ {trend} ‚Äî –±—É–¥—É—â–µ–µ —É–∂–µ –∑–¥–µ—Å—å! –ì–æ—Ç–æ–≤—ã? ‚ö°\n\n–û–±—Å—É–¥–∏–º?",
        f"üé® {trend} ‚Äî –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏–ª–∏ –±–∞–Ω–∞–ª—å–Ω–æ—Å—Ç—å? –í–∞—à–µ –º–Ω–µ–Ω–∏–µ! üé≠"
    ]
    
    text = random.choice(templates)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏
    hashtags = ["#–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "#—Ä–µ–∫–ª–∞–º–∞", "#–Ω–æ–≤–æ—Å—Ç–∏", "#—Å–æ—Ü—Å–µ—Ç–∏", "#—Ç—Ä–µ–Ω–¥—ã", "#digital"]
    random_hashtags = random.sample(hashtags, 3)
    text += f"\n\n{' '.join(random_hashtags)}"
    
    return text

def generate_image(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –ø–æ—Å—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
        width, height = 800, 400
        image = Image.new('RGB', (width, height), color=(45, 45, 65))
        draw = ImageDraw.Draw(image)
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã
        try:
            font = ImageFont.truetype("arial.ttf", 36)
        except:
            try:
                font = ImageFont.truetype("DejaVuSans.ttf", 36)
            except:
                font = ImageFont.load_default()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        wrapped_text = textwrap.fill(trend, width=25)
        
        # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
        bbox = draw.textbbox((0, 0), wrapped_text, font=font)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]
        
        x = (width - text_width) / 2
        y = (height - text_height) / 2
        
        draw.text((x, y), wrapped_text, font=font, fill=(255, 215, 0))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        draw.rectangle([50, 50, width-50, height-50], outline=(255, 215, 0), width=2)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫
        img_byte_arr = io.BytesIO()
        image.save(img_byte_arr, format='PNG')
        img_byte_arr.seek(0)
        
        return img_byte_arr
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

def post_to_telegram(text, image_bytes=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –≤ Telegram"""
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...")
    
    try:
        if image_bytes:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendPhoto"
            files = {'photo': ('trend_image.png', image_bytes, 'image/png')}
            data = {
                'chat_id': TELEGRAM_CHANNEL_ID,
                'caption': text,
                'parse_mode': 'HTML'
            }
            response = requests.post(url, files=files, data=data)
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–∞
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            data = {
                "chat_id": TELEGRAM_CHANNEL_ID,
                "text": text,
                "parse_mode": "HTML"
            }
            response = requests.post(url, data=data)
        
        response.raise_for_status()
        print("‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞...")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥—ã
    trends = get_google_trends()
    print(f"üìä –ù–∞–π–¥–µ–Ω—ã —Ç—Ä–µ–Ω–¥—ã: {trends}")
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–µ–Ω–¥
    selected_trend = random.choice(trends)
    print(f"üéØ –í—ã–±—Ä–∞–Ω —Ç—Ä–µ–Ω–¥: {selected_trend}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = generate_text(selected_trend)
    print(f"üìù –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n{text}")
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_bytes = generate_image(selected_trend)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç
    success = post_to_telegram(text, image_bytes)
    
    if success:
        print("üéâ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        return 0
    else:
        print("‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏.")
        return 1

if __name__ == "__main__":
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
    # pip install pytrends requests Pillow
    
    exit_code = main()
    exit(exit_code)
