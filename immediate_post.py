import random
import requests
from pytrends.request import TrendReq
from PIL import Image, ImageDraw, ImageFont
import io
import textwrap
import os
from datetime import datetime
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = "8461091151:AAEd-mqGswAijmwFB0teeXeZFe-gtHfD-PI"
TELEGRAM_CHANNEL_ID = "-1002201089739"
DEEPSEEK_API_KEY = "sk-7626d74465214867ad209d783d89d01d"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á

NISHA = ["–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "—Ä–µ–∫–ª–∞–º–∞", "–Ω–æ–≤–æ—Å—Ç–∏", "—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", "digital", "SMM"]
GEO_LOCATION = 'RU'

def get_google_trends():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏–∑ Google Trends"""
    print("üìä –ó–∞–ø—Ä–æ—Å –∫ Google Trends...")
    try:
        pytrends = TrendReq(hl='ru-RU', tz=180)
        pytrends.build_payload(NISHA, timeframe='now 1-d', geo=GEO_LOCATION)
        trends_data = pytrends.related_queries()
        
        all_trends = []
        for key in NISHA:
            if key in trends_data and trends_data[key]['top'] is not None:
                all_trends.extend([row['query'] for _, row in trends_data[key]['top'].iterrows()])
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
        filtered_trends = [t for t in all_trends if any(niche in t.lower() for niche in NISHA)]
        
        return list(set(filtered_trends)) if filtered_trends else get_fallback_trends()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Trends: {e}")
        return get_fallback_trends()

def get_fallback_trends():
    """–†–µ–∑–µ—Ä–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –µ—Å–ª–∏ Google Trends –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    current_date = datetime.now().strftime("%Y")
    return [
        f"—Ç—Ä–µ–Ω–¥—ã digital –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ {current_date}",
        f"–Ω–æ–≤–æ—Å—Ç–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π {current_date}",
        "SMM —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
        "–∫–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "—Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö",
        "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏ —Ä–µ–∫–ª–∞–º–µ",
        "email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –¥–ª—è ecommerce",
        "–≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ 2024",
        "–±—Ä–µ–Ω–¥–∏–Ω–≥ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤",
        "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏"
    ]

def generate_text_with_deepseek(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek API"""
    print("üß† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ DeepSeek...")
    
    # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    prompt = f"""–°–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –Ω–∞ —Ç–µ–º—É: "{trend}"

–ü–æ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
1. –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç–º–æ–¥–∑–∏
2. 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ
3. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –∏–ª–∏ —Ñ–∞–∫—Ç—ã (–ø—Ä–∏–¥—É–º–∞–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ)
4. –í–æ–ø—Ä–æ—Å –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é
5. 3-4 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ö–µ—à—Ç–µ–≥–∞

–°—Ç–∏–ª—å: –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –ª–µ–≥–∫–∏–π. –î–ª–∏–Ω–∞: 200-350 —Å–∏–º–≤–æ–ª–æ–≤."""

    try:
        url = "https://api.deepseek.com/v1/chat/completions"
        
        headers = {
            "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
            "Content-Type": "application/json"
        }
        
        data = {
            "model": "deepseek-chat",
            "messages": [
                {
                    "role": "system", 
                    "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –°–æ–∑–¥–∞–≤–∞–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."
                },
                {
                    "role": "user",
                    "content": prompt
                }
            ],
            "max_tokens": 400,
            "temperature": 0.7,
            "top_p": 0.8
        }
        
        response = requests.post(url, headers=headers, json=data, timeout=15)
        
        if response.status_code == 200:
            result = response.json()
            generated_text = result['choices'][0]['message']['content']
            print("‚úÖ –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ DeepSeek")
            return generated_text.strip()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ DeepSeek API: {response.status_code} - {response.text}")
            return generate_quality_text(trend)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ DeepSeek: {e}")
        return generate_quality_text(trend)

def generate_quality_text(trend):
    """–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ API"""
    print("üé® –°–æ–∑–¥–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ...")
    
    # –†–∞–∑–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç—Ä–µ–Ω–¥–æ–≤
    trend_lower = trend.lower()
    
    if any(word in trend_lower for word in ['—Ç—Ä–µ–Ω–¥', '—Ç—Ä–µ–Ω–¥—ã', '2024', '2025']):
        templates = [
            f"üöÄ {trend}\n\n–°–æ–≥–ª–∞—Å–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é, –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Ç–∞–∫–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—é –Ω–∞ 35-40%! üìà\n\n–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n‚Ä¢ –†–æ—Å—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ 60%\n‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ª–∏–¥–∞ –Ω–∞ 25%\n‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ ROI –¥–æ 300%\n\n–£–∂–µ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç–µ –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö? üíº\n\n#–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ #—Ç—Ä–µ–Ω–¥—ã #–±–∏–∑–Ω–µ—Å",
            
            f"üéØ {trend}\n\n–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç 67% —É—Å–ø–µ—à–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π! üí°\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:\nüìä +45% –∫ –æ—Ö–≤–∞—Ç—É –∞—É–¥–∏—Ç–æ—Ä–∏–∏\nüí¨ +80% –∫ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏\nüí∞ -30% –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è\n\n–ö–∞–∫ –≤–∞–º —Ç–∞–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏? ü§î\n\n#digital #—Å—Ç—Ä–∞—Ç–µ–≥–∏—è #—Ä–æ—Å—Ç",
            
            f"üî• {trend}\n\n–ù–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ digital! üåê\n\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç:\n‚úÖ 89% –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç\n‚úÖ ROI –≤ —Å—Ä–µ–¥–Ω–µ–º 450%\n‚úÖ –í—Ä–µ–º—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è: 2-3 –Ω–µ–¥–µ–ª–∏\n\n–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–Ω–µ–¥—Ä—è—Ç—å? üöÄ\n\n#–Ω–æ–≤–æ—Å—Ç–∏ #–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ #–º–∞—Ä–∫–µ—Ç–∏–Ω–≥"
        ]
    
    elif any(word in trend_lower for word in ['–Ω–æ–≤–æ—Å—Ç–∏', 'news', '—Å–æ–±—ã—Ç–∏—è']):
        templates = [
            f"üì¢ {trend}\n\n–í–∞–∂–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –º–∏—Ä–µ digital! –ö–æ–º–ø–∞–Ω–∏–∏ —É–∂–µ —Å–æ–æ–±—â–∞—é—Ç –æ —Ä–æ—Å—Ç–µ –ø—Ä–æ–¥–∞–∂ –Ω–∞ 50% –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è. üéâ\n\n–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n‚Ä¢ –ù–æ–≤—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º\n‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏\n‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞\n\n–ö–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é? üìà\n\n#–Ω–æ–≤–æ—Å—Ç–∏ #digital #–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
            
            f"üåü {trend}\n\n–°–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤–µ–¥—É—â–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏! üìä\n\n–ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã:\n‚Ä¢ –†—ã–Ω–æ–∫ –≤—ã—Ä–æ—Å –Ω–∞ 40% –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª\n‚Ä¢ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞\n‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏\n\n–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ–± —ç—Ç–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö? üí¨\n\n#–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ #–±–∏–∑–Ω–µ—Å #–Ω–æ–≤–æ—Å—Ç–∏"
        ]
    
    elif any(word in trend_lower for word in ['—Å–æ—Ü–∏–∞–ª—å–Ω', 'smm', 'social', 'instagram', 'telegram', '–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ']):
        templates = [
            f"üì± {trend}\n\n–ü—Ä–æ—Ä—ã–≤ –≤ SMM! –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–æ—Å—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ 85%! üöÄ\n\n–¢–æ–ø-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:\n‚Ä¢ Instagram Reels +120% –æ—Ö–≤–∞—Ç–∞\n‚Ä¢ Telegram Channels +200% –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n‚Ä¢ VK –ö–ª–∏–ø—ã +150% –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n\n–ö–∞–∫–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤—ã? üéØ\n\n#smm #—Å–æ—Ü—Å–µ—Ç–∏ #–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ",
            
            f"üí´ {trend}\n\n–ù–æ–≤–∞—è —ç—Ä–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö! –ö–æ–º–ø–∞–Ω–∏–∏ —Å–æ–æ–±—â–∞—é—Ç –æ 3x —Ä–æ—Å—Ç–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏. üìà\n\n–û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:\nüé¨ –í–∏–¥–µ–æ–∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–º–∏–Ω–∏—Ä—É–µ—Ç\nü§ñ AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞\nüìä Real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n–ö–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é? üíº\n\n#—Å–æ—Ü—Å–µ—Ç–∏ #–∫–æ–Ω—Ç–µ–Ω—Ç #—Ç—Ä–µ–Ω–¥—ã"
        ]
    
    else:
        templates = [
            f"üéØ {trend}\n\n–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–º–ø–∞–Ω–∏–π –Ω–∞ 65%! üìä\n\n–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ —É–ª—É—á—à–µ–Ω–∏—è:\n‚Ä¢ CTR: +40-50%\n‚Ä¢ CPC: -35%\n‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å–∏—è: +55%\n‚Ä¢ ROI: –¥–æ 400%\n\n–£–∂–µ –µ—Å—Ç—å –æ–ø—ã—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏—è? –î–µ–ª–∏—Ç–µ—Å—å –∫–µ–π—Å–∞–º–∏! üëá\n\n#–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ #—Ä–µ–∫–ª–∞–º–∞ #—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
            
            f"üöÄ {trend}\n\n–°—Ç—Ä–∞—Ç–µ–≥–∏—è, –∫–æ—Ç–æ—Ä—É—é –∏—Å–ø–æ–ª—å–∑—É—é—Ç 78% —É—Å–ø–µ—à–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤! üí°\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:\nüìà –†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ –Ω–∞ 45-60%\nüë• –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ 70%\nüéØ –£–ª—É—á—à–µ–Ω–∏–µ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥–∞ –Ω–∞ 80%\n\n–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª? ü§î\n\n#—Å—Ç—Ä–∞—Ç–µ–≥–∏—è #–±—Ä–µ–Ω–¥ #growth",
            
            f"üî• {trend}\n\n–ò–Ω–Ω–æ–≤–∞—Ü–∏—è –≤ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ! –†–∞–Ω–Ω–∏–µ –≤–Ω–µ–¥—Ä–µ–Ω—Ü—ã —Å–æ–æ–±—â–∞—é—Ç –æ 2.5x ROI. üí∞\n\n–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥—Ö–æ–¥–∞:\n‚úÖ –ë—ã—Å—Ç—Ä–æ–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ (1-2 –Ω–µ–¥–µ–ª–∏)\n‚úÖ –ù–∏–∑–∫–∏–π –ø–æ—Ä–æ–≥ –≤—Ö–æ–¥–∞\n‚úÖ –í—ã—Å–æ–∫–∞—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å\n‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞\n\n–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å? üéØ\n\n#–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ #–º–∞—Ä–∫–µ—Ç–∏–Ω–≥ #—Å—Ç–∞—Ä—Ç–∞–ø"
        ]
    
    return random.choice(templates)

def generate_image(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –ø–æ—Å—Ç–∞"""
    try:
        width, height = 1000, 500
        image = Image.new('RGB', (width, height), color=(25, 35, 45))
        draw = ImageDraw.Draw(image)
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
        for i in range(height):
            r = int(25 + (i / height) * 20)
            g = int(35 + (i / height) * 15)
            b = int(45 + (i / height) * 20)
            draw.line([(0, i), (width, i)], fill=(r, g, b))
        
        try:
            title_font = ImageFont.truetype("arialbd.ttf", 46)
            text_font = ImageFont.truetype("arial.ttf", 32)
        except:
            title_font = ImageFont.load_default()
            text_font = ImageFont.load_default()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = "–ê–ö–¢–£–ê–õ–¨–ù–´–ô –¢–†–ï–ù–î"
        bbox = draw.textbbox((0, 0), title, font=title_font)
        title_width = bbox[2] - bbox[0]
        draw.text(((width - title_width) // 2, 120), title, font=title_font, fill=(255, 215, 0))
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        wrapped_text = textwrap.fill(trend, width=25)
        bbox = draw.textbbox((0, 0), wrapped_text, font=text_font)
        text_height = bbox[3] - bbox[1]
        draw.text((width // 2, 280), wrapped_text, font=text_font, fill=(255, 255, 255), anchor="mm")
        
        # –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        draw.rectangle([40, 40, width-40, height-40], outline=(255, 215, 0), width=4)
        
        img_byte_arr = io.BytesIO()
        image.save(img_byte_arr, format='PNG')
        img_byte_arr.seek(0)
        
        return img_byte_arr
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

def post_to_telegram(text, image_bytes=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –≤ Telegram"""
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...")
    
    try:
        if image_bytes:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendPhoto"
            files = {'photo': ('trend_image.png', image_bytes, 'image/png')}
            data = {
                'chat_id': TELEGRAM_CHANNEL_ID,
                'caption': text,
                'parse_mode': 'HTML'
            }
            response = requests.post(url, files=files, data=data)
        else:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            data = {
                "chat_id": TELEGRAM_CHANNEL_ID,
                "text": text,
                "parse_mode": "HTML"
            }
            response = requests.post(url, data=data)
        
        response.raise_for_status()
        print("‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞...")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥—ã –∏–∑ Google Trends
    trends = get_google_trends()
    print(f"üìä –ù–∞–π–¥–µ–Ω—ã —Ç—Ä–µ–Ω–¥—ã: {trends}")
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–µ–Ω–¥
    selected_trend = random.choice(trends)
    print(f"üéØ –í—ã–±—Ä–∞–Ω —Ç—Ä–µ–Ω–¥: {selected_trend}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = generate_text_with_deepseek(selected_trend)
    print(f"üìù –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n{text}")
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_bytes = generate_image(selected_trend)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç
    success = post_to_telegram(text, image_bytes)
    
    if success:
        print("üéâ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        return 0
    else:
        print("‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏.")
        return 1

if __name__ == "__main__":
    exit_code = main()
    exit(exit_code)
