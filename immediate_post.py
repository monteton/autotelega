import random
import requests
from pytrends.request import TrendReq
from PIL import Image, ImageDraw, ImageFont
import io
import textwrap
import os
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = "8461091151:AAEd-mqGswAijmwFB0teeXeZFe-gtHfD-PI"
TELEGRAM_CHANNEL_ID = "-1002201089739"

NISHA = ["–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "—Ä–µ–∫–ª–∞–º–∞", "–Ω–æ–≤–æ—Å—Ç–∏", "—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", "digital", "SMM"]
GEO_LOCATION = 'RU'  # –†–æ—Å—Å–∏—è –≤–º–µ—Å—Ç–æ RS
TIMEZONE = 'Europe/Moscow'

FALLBACK_TRENDS = [
    "—Ç—Ä–µ–Ω–¥—ã digital –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞", "–Ω–æ–≤–æ—Å—Ç–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π", "SMM —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ 2024",
    "–∫–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ —Ç—Ä–µ–Ω–¥—ã", "—Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞", "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ",
    "email –º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç", "–±—Ä–µ–Ω–¥–∏–Ω–≥ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞"
]

def get_google_trends():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏–∑ Google Trends"""
    print("üìä –ó–∞–ø—Ä–æ—Å –∫ Google Trends...")
    try:
        pytrends = TrendReq(hl='ru-RU', tz=180)
        pytrends.build_payload(NISHA, timeframe='now 1-d', geo=GEO_LOCATION)
        trends_data = pytrends.related_queries()
        
        all_trends = []
        for key in NISHA:
            if key in trends_data and trends_data[key]['top'] is not None:
                all_trends.extend([row['query'] for _, row in trends_data[key]['top'].iterrows()])
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
        filtered_trends = [t for t in all_trends if any(niche in t.lower() for niche in NISHA)]
        
        return list(set(filtered_trends)) if filtered_trends else FALLBACK_TRENDS
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Trends: {e}")
        return FALLBACK_TRENDS

def generate_text(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞"""
    
    # –ë–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    templates = [
        # –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥
        f"üéØ {trend}\n\n–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –≤ 2024? ü§î\n\n‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –Ω–∞ 30%\n‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ö–≤–∞—Ç–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏\n‚Ä¢ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤\n\n–£–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –≤ —Å–≤–æ–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏? üíº",
        
        f"üìà {trend}\n\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–æ—Å—Ç –Ω–∞ 45% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–≤–∞—Ä—Ç–∞–ª! üìä\n\n–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n‚úÖ –£–ª—É—á—à–µ–Ω–∏–µ –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏\n‚úÖ –†–æ—Å—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç–∏ –±—Ä–µ–Ω–¥–∞\n‚úÖ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂\n\n–ö–∞–∫ –≤–∞–º —Ç–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã? üöÄ",
        
        # –†–µ–∫–ª–∞–º–∞
        f"üî• {trend}\n\n–ù–æ–≤—ã–π —Ç—Ä–µ–Ω–¥ –≤ digital-—Ä–µ–∫–ª–∞–º–µ! üíª\n\n–ü–æ—á–µ–º—É —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n‚Ä¢ –í—ã—Å–æ–∫–∏–π CTR\n‚Ä¢ –ù–∏–∑–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–ª–∏–∫–∞\n‚Ä¢ –¢–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n\n–£–∂–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏? –î–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º! üëá",
        
        f"üí° {trend}\n\n–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–µ–∫–ª–∞–º–µ! üåü\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–Ω–µ–¥—Ä–µ–Ω–∏—è:\nüì± +67% –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞\nüí¨ +89% –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏\nüí∞ -35% —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è\n\n–í–∞—à–µ –º–Ω–µ–Ω–∏–µ? ü§î",
        
        # –°–æ—Ü—Å–µ—Ç–∏
        f"üöÄ {trend}\n\n–í–∑—Ä—ã–≤–Ω–æ–π —Ä–æ—Å—Ç –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö! üì±\n\n–¢–æ–ø-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:\n‚Ä¢ Instagram Reels\n‚Ä¢ Telegram Channels\n‚Ä¢ YouTube Shorts\n‚Ä¢ VK –ö–ª–∏–ø—ã\n\n–ì–¥–µ —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏? üé¨",
        
        f"üåü {trend}\n\n–¢—Ä–µ–Ω–¥ –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏—Ç SMM –≤ 2024! üí´\n\n–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏—à–∫–∏:\nüé® –í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\nü§ñ AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è\nüìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n\n–ö–∞–∫ –≤–Ω–µ–¥—Ä—è–µ—Ç–µ –≤ —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã? üíº",
        
        # –ù–æ–≤–æ—Å—Ç–∏
        f"üì¢ {trend}\n\n–°–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –∏–Ω—Å–∞–π—Ç—ã! üîç\n\n–ß—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:\n‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö\n‚Ä¢ –ù–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã\n‚Ä¢ –ö–µ–π—Å—ã —É—Å–ø–µ—à–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π\n\n–û–±—Å—É–∂–¥–∞–µ–º –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! üí¨",
        
        f"üéâ {trend}\n\n–ü—Ä–æ—Ä—ã–≤ –≤ digital-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏! ‚ö°\n\n–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:\n‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è\n‚úÖ –ë—ã—Å—Ç—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n‚úÖ –í—ã—Å–æ–∫–∞—è –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å\n\n–£–∂–µ –≤ –ø–ª–∞–Ω–∞—Ö –Ω–∞ 2024? üìÖ"
    ]
    
    # –í—ã–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
    trend_lower = trend.lower()
    if any(word in trend_lower for word in ['–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', 'marketing', '–±–∏–∑–Ω–µ—Å']):
        selected_template = random.choice(templates[:2])
    elif any(word in trend_lower for word in ['—Ä–µ–∫–ª–∞–º–∞', 'advertising', 'ads']):
        selected_template = random.choice(templates[2:4])
    elif any(word in trend_lower for word in ['—Å–æ—Ü–∏–∞–ª—å–Ω', 'smm', 'social', 'instagram', 'telegram']):
        selected_template = random.choice(templates[4:6])
    else:
        selected_template = random.choice(templates[6:8])
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥–∏
    hashtag_groups = [
        ["#–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "#–±–∏–∑–Ω–µ—Å", "#—Ç—Ä–µ–Ω–¥—ã2024"],
        ["#—Ä–µ–∫–ª–∞–º–∞", "#digital", "#–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ"],
        ["#smm", "#—Å–æ—Ü—Å–µ—Ç–∏", "#–∫–æ–Ω—Ç–µ–Ω—Ç"],
        ["#–Ω–æ–≤–æ—Å—Ç–∏", "#–∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "#–∫–µ–π—Å—ã"]
    ]
    
    hashtags = " ".join(random.choice(hashtag_groups))
    text = f"{selected_template}\n\n{hashtags}"
    
    return text

def generate_image(trend):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è –ø–æ—Å—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        width, height = 1000, 500
        image = Image.new('RGB', (width, height), color=(25, 25, 40))  # –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
        draw = ImageDraw.Draw(image)
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
        for i in range(height):
            r = int(25 + (i / height) * 30)
            g = int(25 + (i / height) * 20)
            b = int(40 + (i / height) * 30)
            draw.line([(0, i), (width, i)], fill=(r, g, b))
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        try:
            title_font = ImageFont.truetype("arialbd.ttf", 42)
            text_font = ImageFont.truetype("arial.ttf", 28)
        except:
            title_font = ImageFont.load_default()
            text_font = ImageFont.load_default()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = "–ù–û–í–´–ô –¢–†–ï–ù–î"
        draw.text((width//2, 100), title, font=title_font, fill=(255, 215, 0), anchor="mm")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        wrapped_text = textwrap.fill(trend, width=30)
        draw.text((width//2, 250), wrapped_text, font=text_font, fill=(255, 255, 255), anchor="mm")
        
        # –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        draw.rectangle([50, 50, width-50, height-50], outline=(255, 215, 0), width=3)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫
        img_byte_arr = io.BytesIO()
        image.save(img_byte_arr, format='PNG')
        img_byte_arr.seek(0)
        
        return img_byte_arr
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return None

def post_to_telegram(text, image_bytes=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ –≤ Telegram"""
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...")
    
    try:
        if image_bytes:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendPhoto"
            files = {'photo': ('trend_image.png', image_bytes, 'image/png')}
            data = {
                'chat_id': TELEGRAM_CHANNEL_ID,
                'caption': text,
                'parse_mode': 'HTML'
            }
            response = requests.post(url, files=files, data=data)
        else:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            data = {
                "chat_id": TELEGRAM_CHANNEL_ID,
                "text": text,
                "parse_mode": "HTML"
            }
            response = requests.post(url, data=data)
        
        response.raise_for_status()
        print("‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞...")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥—ã
    trends = get_google_trends()
    print(f"üìä –ù–∞–π–¥–µ–Ω—ã —Ç—Ä–µ–Ω–¥—ã: {trends}")
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–µ–Ω–¥
    selected_trend = random.choice(trends)
    print(f"üéØ –í—ã–±—Ä–∞–Ω —Ç—Ä–µ–Ω–¥: {selected_trend}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = generate_text(selected_trend)
    print(f"üìù –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:\n{text}")
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_bytes = generate_image(selected_trend)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç
    success = post_to_telegram(text, image_bytes)
    
    if success:
        print("üéâ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        return 0
    else:
        print("‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏.")
        return 1

if __name__ == "__main__":
    exit_code = main()
    exit(exit_code)
