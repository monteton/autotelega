from pytrends.request import TrendReq

class TrendsManager:
    def __init__(self):
        self.nisha = ["–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "—Ä–µ–∫–ª–∞–º–∞", "–Ω–æ–≤–æ—Å—Ç–∏", "—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏", "digital", "SMM"]
        self.geo_location = 'RU'
    
    def get_google_trends(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏–∑ Google Trends"""
        print("üìä –ó–∞–ø—Ä–æ—Å –∫ Google Trends...")
        try:
            pytrends = TrendReq(hl='ru-RU', tz=180)
            pytrends.build_payload(self.nisha, timeframe='now 1-d', geo=self.geo_location)
            trends_data = pytrends.related_queries()
            
            all_trends = []
            for key in self.nisha:
                if key in trends_data and trends_data[key]['top'] is not None:
                    all_trends.extend([row['query'] for _, row in trends_data[key]['top'].iterrows()])
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã
            filtered_trends = [t for t in all_trends if any(niche in t.lower() for niche in self.nisha)]
            
            return list(set(filtered_trends)) if filtered_trends else self.get_fallback_trends()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Google Trends: {e}")
            return self.get_fallback_trends()
    
    def get_fallback_trends(self):
        """–†–µ–∑–µ—Ä–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –µ—Å–ª–∏ Google Trends –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
        from datetime import datetime
        current_year = datetime.now().strftime("%Y")
        
        return [
            f"—Ç—Ä–µ–Ω–¥—ã digital –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ {current_year}",
            f"–Ω–æ–≤–æ—Å—Ç–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π {current_year}",
            "SMM —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞",
            "–∫–æ–Ω—Ç–µ–Ω—Ç –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤",
            "—Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö",
            "–Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏ —Ä–µ–∫–ª–∞–º–µ"
        ]
